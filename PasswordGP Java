version 0.1 alpha

import java.util.Random;
import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);
        CoreGenPassword CGP = new CoreGenPassword();
        String[] filepassword = new String[16000];
        int sizePassword;
        boolean useSings;
        boolean useBigLetters;
        boolean useSmallLetters;
        boolean useNumbers;
        System.out.println("********************************************************************");
        System.out.println("*Приветствую тебя в программе генерирования паролей!               *");
        System.out.println("*Программа создана программистом Aleser.                           *");
        System.out.println("*Канал на YouTube: https://www.youtube.com/channel/UCgc04NBvofY_2RS*");
        System.out.println("*KtOTYO2g?view_as=subscriber                                       *");
        System.out.println("********************************************************************");

        System.out.print("Количество символов в твоём пароле: ");
        sizePassword = scanner.nextInt();
        System.out.println("Нужны ли в твоём пароле знаки? ДА/НЕТ: ");
        useSings = scanner.nextBoolean();
        System.out.println("Нужны ли в твоём пароле большие латинские буквы? ДА/НЕТ: ");
        useBigLetters = scanner.nextBoolean();
        System.out.println("Нужны ли в твоём пароле маленькие латинские буквы? ДА/НЕТ: ");
        useSmallLetters = scanner.nextBoolean();
        System.out.println("Нужны ли в твоём пароле числа? ДА/НЕТ: ");
        useNumbers = scanner.nextBoolean();

        System.out.println("********************************************************************");

        System.out.println("Кол-во символов           " + sizePassword);
        System.out.println("Знаки                     " + useSings);
        System.out.println("Большие латинские буквы   " + useBigLetters);
        System.out.println("Маленькие латинские буквы " + useSmallLetters);
        System.out.println("Числа                     " + useNumbers);

        System.out.println("********************************************************************");

        for (int k = 0; k < 16000; k++) {
            filepassword[k] = CGP.CoreGenPassword(sizePassword,useSings,useBigLetters,useSmallLetters,useNumbers);
        }

        for (int k = 0; k < 16000; k++) {
            System.out.println(filepassword[k]);
        }

    }
}
class CoreGenPassword {
    //Объявление переменных.
    String password;
    static String Symbols = "%*)?@#$~ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"; //Из этих символов делается пароль.
    int i;
    int randomnum;

    public String CoreGenPassword(int sizePassword, boolean useSings, boolean useBigLetters,boolean useSmallLetters, boolean useNumbers) {
        //Обнуление переменных для повторного их использования.
        Random random = new Random();
        password = "";
        i = 0;
        randomnum = 0;
        ///////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////Великолепное Ядро генерации паролей/////////////////////////////////   
        ///////////////////////////////////////////////////////////////////////////////////////////
        //В цикле выбирается случайное число (для переменной randomnum) и проверяется по условиям ядра. 
        //Если число не попадает ни под одно условие,
        //то оно является пригодным и используется для вытаскивания символов из переменной Symbols. (Symbols.ChatAt(randomnum)).
        //После эти символы присваиваются к перменной password. В конце цикла получается готовый пароль.
        while (i != sizePassword) {
            i++;
            randomnum = random.nextInt(Symbols.length());

            //              Условия ядра.             //

            if (useSings == false && randomnum < 8) {
                i -= 1;
                continue;
            }
            if (useBigLetters == false && randomnum > 7 && randomnum < 34) {
                i -= 1;
                continue;
            }
            if (useSmallLetters == false && randomnum > 33 && randomnum < 60) {
                i -= 1;
                continue;
            }
            if (useNumbers == false && randomnum > 59) {
                i -= 1;
                continue;
            }
            //Формирование пароля.
            password += Symbols.charAt(randomnum);
        }
        return password; //Возвращение переменной password как готовый пароль.
    }
}
