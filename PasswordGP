//Версия 1.5 | Version 1.5

{$product PasswordGP}       //Директивы компилятора.  {Команды writeln и write исключительно относятся к графике программы и могут быть разбросаны по всему коду для мониторинга работы программы}                             
{$version 1.5}                                                                                               
{$copyright Красиков Александр Сергеевич} 
{$trademark AleserGaming}
program passwordGP;

uses CRT;
                                {Необходимые переменные для полноценной работы программы.
                                От некоторых переменных можно избавиться, но из-за этого исчезнут некоторые
                                плюшки.}
var
  symbols: string;
  filepassword: array of string;
  Enter, password: string;
  mode1: boolean;
  mode2: boolean;
  mode3: boolean;
  mode4: boolean;
  num, procentnum: integer;
  randomnum, i, proc, whiledo: integer;

const
  procent = 320;//Константа является частью кода, предназначенная для отображения в процентах хода генерации паролей.
  titelconsol = 'PasswordGP';

procedure BackgroundColor();//Создает цвет фона окна.
begin
  TextBackground(1);
  for var bg := 1 to 50 do
    write('                                                                                ');
  TextColor(11);
  gotoXY(1,1);
end;

begin
  BackgroundColor();
  //Название окна терминала.
  System.Console.Title := titelconsol;
  //Код приветствия и описания программы.
  
  SetLength(filepassword, 16000); //Размер массива для хранения готовых паролей
  procentnum := 160;
  symbols := '%*)?@#$~ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  writeln('********************************************************************');
  writeln('*Приветствую тебя в программе генерирования паролей!               *');
  writeln('*Программа создана программистом Aleser.                           *');
  writeln('*Канал на YouTube: https://www.youtube.com/channel/UCgc04NBvofY_2RS*');
  writeln('*KtOTYO2g?view_as=subscriber                                       *');
  writeln('********************************************************************');
  
  while true do //Этот кусок кода запрашивает желаемое кол-во символов в пароле для ядра генерации паролей. Ограничено до 1000.
  begin
    try
      write('Количество символов в твоём пароле: ');
      readln(Enter);
      whiledo := Integer.Parse(Enter);
      if whiledo > 1000 then 
      begin
        writeln('Введи число поменьше: ');
        continue;
      end;
      break;
    
    except
      writeln('Нужно ввести числа!');
      continue;
    end;
  end;
  //Ну и остальные необходимые сведенья для ядра генерации паролей.
  write('Нужны ли в твоём пароле знаки? ДА/НЕТ: ');
  readln(Enter);
  if Enter.ToLower = 'да' then mode1 := true;
  write('Нужны ли в твоём пароле большие латинские буквы? ДА/НЕТ: ');
  readln(Enter);
  if Enter.ToLower = 'да' then mode2 := true;
  write('Нужны ли в твоём пароле маленькие латинские буквы? ДА/НЕТ: ');
  readln(Enter);
  if Enter.ToLower = 'да' then mode3 := true;
  write('Нужны ли в твоём пароле числа? ДА/НЕТ: ');
  readln(Enter);
  if Enter.ToLower = 'да' then mode4 := true;
  //Этот кусок кода выводит в терминал внесенные сведенья.
  writeln('********************************************************************');
  writeln('Кол-во символов           [', whiledo, ']; ');
  writeln('Знаки                     [', mode1, ']; ');
  writeln('Большие латинские буквы   [', mode2, ']; ');
  writeln('Маленькие латинские буквы [', mode3, ']; ');
  writeln('Числа                     [', mode4, ']; ');
  writeln('********************************************************************');
  writeln();
  write('         [');
  ///////////////////////////////////////////////////////////////////////////////////////////
  ///////////////////////Великолепное Ядро генерации паролей/////////////////////////////////   
  ///////////////////////////////////////////////////////////////////////////////////////////     
                                                             {Это ядро мне пришло в голову на следующий день прямо из кровати. 
                                                             Первое же ядро, которое я хотел написать, оно не прижилось из-за громадного кода и
                                                             неудобности его редактировать.}
  
  for var ii := 1 to 16000 do //цикл for создает кол-во паролей. В данный момент паролей будет 16 000 тысяч.
  begin
    while i <> whiledo do //В цикле while образуется пароль из символов переменной symbols
    begin
      i += 1;
      randomnum := Random(symbols.Length + 1);
      if randomnum = 0 then
      begin
        i -= 1;
        continue;
      end;
      if (mode1 = false) and (randomnum < 9) then
      begin
        i -= 1;
        continue;
      end;
      if (mode2 = false) and (randomnum > 8) and (randomnum < 35) then
      begin
        i -= 1;
        continue;
      end;
      if (mode3 = false) and (randomnum > 34) and (randomnum < 61) then
      begin
        i -= 1;
        continue;
      end;
      if (mode4 = false) and (randomnum > 60) then
      begin
        i -= 1;
        continue;
      end;
      password += symbols.Chars[randomnum];
    end;
    ///////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////Файловый модуль ядра///////////////////////////////////////  
    ///////////////////////////////////////////////////////////////////////////////////////////
                                                             {Этот модуль записывает в массив filepassword
                                                              готовые пароли из ядра.}
    
    num += 1; //переменная num - индикатор количества созданных паролей
    //Это условие отвечает за отображение процентов в терминале.
    if num > procentnum - 1 then
    begin
      procentnum += procent;
      proc += 1;
      write('>');
    end;
                            {Этот кусок кода выравнивает пароли для их записи в текстовый файл,
                             чтобы они не выпирали.}
    if num < 10 then begin
      filepassword[num - 1] := '[' + num + ']      ' + password;     
    end;
    if (num > 9) and (num < 100) then 
    begin
      filepassword[num - 1] := '[' + num + ']     ' + password;
    end;
    if (num > 99) and (num < 1000) then
    begin
      filepassword[num - 1] := '[' + num + ']    ' + password;
    end;
    if (num > 999) and (num < 10000) then
    begin
      filepassword[num - 1] := '[' + num + ']   ' + password;
    end;
    if num > 9999 then
    begin
      filepassword[num - 1] := '[' + num + ']  ' + password;
    end;   
    //Этот маленький кусок кода очищает переменные password и i для создания нового пароля в ядре генерации паролей.
    password := '';
    i := 0;
  end;
  write(']');
  writeln();
  writeln();
  writeln('********************************************************************');
  //Ну и конечный код записывает в текстовый файл PasswordsGP.txt и в файл PasswordsGP.alesergaming готовые пароли
  WriteAllLines('PasswordsGP.txt', filepassword); //Запись паролей в файл.
  WriteAllLines('ID' + Random(999999) + ' PGP.alesergaming', filepassword);//Запись копии паролей. Подбор случайного ID для файла.
  exec('PasswordsGP.txt','UTF-8');// Открытие файла с паролями.
  writeln('Подпишись на канал, если понравился генератор паролей.');
  writeln('Сессия программы завершена.');
  while true do
  begin
    //Зацикливает программу, чтобы она не завершалась и закрывалась в ручную.
  end;
end.
